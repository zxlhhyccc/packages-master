diff --git a/src/dmap/grl-common.c b/src/dmap/grl-common.c
index fa92df9..6a1da5e 100644
--- a/src/dmap/grl-common.c
+++ b/src/dmap/grl-common.c
@@ -39,7 +39,7 @@ gchar *
 grl_dmap_build_url (DMAPMdnsBrowserService *service)
 {
   return g_strdup_printf ("%s://%s:%u",
-                          service->service_name,
-                          service->host,
-                          service->port);
+                           service->service_name,
+                           service->host,
+                           service->port);
 }
diff --git a/src/dmap/grl-daap-db.c b/src/dmap/grl-daap-db.c
index 6621094..c931d91 100644
--- a/src/dmap/grl-daap-db.c
+++ b/src/dmap/grl-daap-db.c
@@ -112,8 +112,8 @@ grl_daap_db_lookup_by_id (const DMAPDb *db, guint id)
 
 static void
 grl_daap_db_foreach (const DMAPDb *db,
-                        GHFunc func,
-                        gpointer data)
+                     GHFunc func,
+                     gpointer data)
 {
   g_error ("Not implemented");
 }
@@ -135,7 +135,7 @@ set_insert (GHashTable *category, const char *category_name, char *set_name, Grl
   id = g_strdup_printf ("%s-%s", category_name, set_name);
 
   container = grl_media_container_new ();
-  grl_media_set_id    (container, id);
+  grl_media_set_id (container, id);
   grl_media_set_title (container, set_name);
 
   set = g_hash_table_lookup (category, container);
@@ -173,26 +173,16 @@ grl_daap_db_add (DMAPDb *_db, DMAPRecord *_record)
   GrlMedia *media;
 
   g_object_get (record,
-               "songalbum",
-               &album,
-               "songartist",
-               &artist,
-               "bitrate",
-               &bitrate,
-               "duration",
-               &duration,
-               "songgenre",
-               &genre,
-               "title",
-               &title,
-               "track",
-               &track,
-               "disc",
-               &disc,
-               "location",
-               &url,
-               "has-video",
-               &has_video,
+               "songalbum", &album,
+               "songartist", &artist,
+               "bitrate", &bitrate,
+               "duration", &duration,
+               "songgenre", &genre,
+               "title", &title,
+               "track", &track,
+               "disc", &disc,
+               "location", &url,
+               "has-video", &has_video,
                 NULL);
 
   id_s = g_strdup_printf ("%u", nextid);
@@ -203,8 +193,8 @@ grl_daap_db_add (DMAPDb *_db, DMAPRecord *_record)
     media = grl_media_audio_new ();
   }
 
-  grl_media_set_id           (media, id_s);
-  grl_media_set_duration     (media, duration);
+  grl_media_set_id (media, id_s);
+  grl_media_set_duration (media, duration);
 
   if (title) {
     grl_media_set_title (media, title);
@@ -217,7 +207,7 @@ grl_daap_db_add (DMAPDb *_db, DMAPRecord *_record)
   }
 
   if (has_video == FALSE) {
-    grl_media_set_bitrate      (media, bitrate);
+    grl_media_set_bitrate (media, bitrate);
     grl_media_set_track_number (media, track);
 
     if (disc != 0) {
@@ -249,7 +239,7 @@ grl_daap_db_add (DMAPDb *_db, DMAPRecord *_record)
 static gboolean
 same_media (GrlMedia *a, GrlMedia *b)
 {
-  return (strcmp (grl_media_get_id (a), grl_media_get_id (b)) == 0);
+  return strcmp (grl_media_get_id (a), grl_media_get_id (b)) == 0;
 }
 
 void
@@ -334,7 +324,7 @@ grl_daap_db_search (GrlDAAPDb *db,
   results = g_hash_table_new (g_str_hash, g_str_equal);
 
   /* For albums and artists... */
-  for (i = 0; i < G_N_ELEMENTS(hash_tables); i++) {
+  for (i = 0; i < G_N_ELEMENTS (hash_tables); i++) {
     g_hash_table_iter_init (&iter1, hash_tables[i]);
     /* For each album or artist in above... */
     for (j = 0; g_hash_table_iter_next (&iter1, &key1, &val1); j++) {
@@ -396,10 +386,10 @@ grl_daap_db_init (GrlDAAPDb *db)
   db->priv->albums_container  = grl_media_container_new ();
   db->priv->artists_container = grl_media_container_new ();
 
-  grl_media_set_id    (GRL_MEDIA (db->priv->albums_container), ALBUMS_ID);
+  grl_media_set_id (GRL_MEDIA (db->priv->albums_container), ALBUMS_ID);
   grl_media_set_title (GRL_MEDIA (db->priv->albums_container), ALBUMS_NAME);
 
-  grl_media_set_id    (GRL_MEDIA (db->priv->artists_container), ARTISTS_ID);
+  grl_media_set_id (GRL_MEDIA (db->priv->artists_container), ARTISTS_ID);
   grl_media_set_title (GRL_MEDIA (db->priv->artists_container), ARTISTS_NAME);
 
   db->priv->root    = g_hash_table_new_full (container_hash, container_equal, g_object_unref, (GDestroyNotify) g_hash_table_destroy);
@@ -426,9 +416,9 @@ grl_daap_db_finalize (GObject *object)
 
 static void
 grl_daap_db_set_property (GObject *object,
-                             guint prop_id,
-                             const GValue *value,
-                             GParamSpec *pspec)
+                          guint prop_id,
+                          const GValue *value,
+                          GParamSpec *pspec)
 {
   switch (prop_id) {
   default:
@@ -439,9 +429,9 @@ grl_daap_db_set_property (GObject *object,
 
 static void
 grl_daap_db_get_property (GObject *object,
-                             guint prop_id,
-                             GValue *value,
-                             GParamSpec *pspec)
+                          guint prop_id,
+                          GValue *value,
+                          GParamSpec *pspec)
 {
   switch (prop_id) {
   default:
diff --git a/src/dmap/grl-daap-db.h b/src/dmap/grl-daap-db.h
index f52a9b5..2548c50 100644
--- a/src/dmap/grl-daap-db.h
+++ b/src/dmap/grl-daap-db.h
@@ -26,34 +26,34 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_GRL_DAAP_DB                     \
-  (grl_daap_db_get_type ())
-
-#define GRL_DAAP_DB(o)                             \
-  (G_TYPE_CHECK_INSTANCE_CAST ((o),                   \
-                               TYPE_GRL_DAAP_DB,   \
-                               GrlDAAPDb))
-
-#define GRL_DAAP_DB_CLASS(k)                 \
-  (G_TYPE_CHECK_CLASS_CAST((k),                 \
-                           TYPE_GRL_DAAP_DB, \
-                           GrlDAAPDbClass))
-#define IS_GRL_DAAP_DB(o)                          \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                    \
-                              TYPE_GRL_DAAP_DB))
-#define IS_GRL_DAAP_DB_CLASS(k)                       \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                          \
-                           TYPE_GRL_DAAP_DB_CLASS))
-
-#define GRL_DAAP_DB_GET_CLASS(o)                \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                  \
-                             TYPE_GRL_DAAP_DB,  \
-                             GrlDAAPDbClass))
+#define TYPE_GRL_DAAP_DB (grl_daap_db_get_type ())
+
+#define GRL_DAAP_DB(o)                                                         \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_GRL_DAAP_DB,                              \
+                                GrlDAAPDb))
 
-#define GRL_DAAP_DB_GET_PRIVATE(o)                 \
-  (G_TYPE_INSTANCE_GET_PRIVATE((o),                   \
-                               TYPE_GRL_DAAP_DB,   \
-                               GrlDAAPDbPrivate))
+#define GRL_DAAP_DB_CLASS(k)                                                   \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_GRL_DAAP_DB,                                 \
+                             GrlDAAPDbClass))
+#define IS_GRL_DAAP_DB(o)                                                      \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
+                                TYPE_GRL_DAAP_DB))
+
+#define IS_GRL_DAAP_DB_CLASS(k)                                                \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                             TYPE_GRL_DAAP_DB_CLASS))
+
+#define GRL_DAAP_DB_GET_CLASS(o)                                               \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                               TYPE_GRL_DAAP_DB,                               \
+                               GrlDAAPDbClass))
+
+#define GRL_DAAP_DB_GET_PRIVATE(o)                                             \
+  (G_TYPE_INSTANCE_GET_PRIVATE ((o),                                           \
+                                 TYPE_GRL_DAAP_DB,                             \
+                                 GrlDAAPDbPrivate))
 
 typedef struct GrlDAAPDbPrivate GrlDAAPDbPrivate;
 
diff --git a/src/dmap/grl-daap-record-factory.c b/src/dmap/grl-daap-record-factory.c
index e986394..648fd85 100644
--- a/src/dmap/grl-daap-record-factory.c
+++ b/src/dmap/grl-daap-record-factory.c
@@ -22,9 +22,9 @@
 #include "grl-daap-record.h"
 
 DMAPRecord *
-grl_daap_record_factory_create  (DMAPRecordFactory *factory, gpointer user_data)
+grl_daap_record_factory_create (DMAPRecordFactory *factory, gpointer user_data)
 {
-	return DMAP_RECORD (grl_daap_record_new ());
+  return DMAP_RECORD (grl_daap_record_new ());
 }
 
 static void
@@ -40,19 +40,19 @@ grl_daap_record_factory_class_init (GrlDAAPRecordFactoryClass *klass)
 static void
 grl_daap_record_factory_interface_init (gpointer iface, gpointer data)
 {
-	DMAPRecordFactoryIface *factory = iface;
+  DMAPRecordFactoryIface *factory = iface;
 
-	g_assert (G_TYPE_FROM_INTERFACE (factory) == DMAP_TYPE_RECORD_FACTORY);
+  g_assert (G_TYPE_FROM_INTERFACE (factory) == DMAP_TYPE_RECORD_FACTORY);
 
-	factory->create = grl_daap_record_factory_create;
+  factory->create = grl_daap_record_factory_create;
 }
 
 G_DEFINE_TYPE_WITH_CODE (GrlDAAPRecordFactory, grl_daap_record_factory, G_TYPE_OBJECT,
-			 G_IMPLEMENT_INTERFACE (DMAP_TYPE_RECORD_FACTORY,
-					        grl_daap_record_factory_interface_init))
+                         G_IMPLEMENT_INTERFACE (DMAP_TYPE_RECORD_FACTORY,
+                                               grl_daap_record_factory_interface_init))
 
 GrlDAAPRecordFactory *
 grl_daap_record_factory_new (void)
 {
-	return SIMPLE_DAAP_RECORD_FACTORY (g_object_new (TYPE_SIMPLE_DAAP_RECORD_FACTORY, NULL));
+  return SIMPLE_DAAP_RECORD_FACTORY (g_object_new (TYPE_SIMPLE_DAAP_RECORD_FACTORY, NULL));
 }
diff --git a/src/dmap/grl-daap-record-factory.h b/src/dmap/grl-daap-record-factory.h
index 514713a..45aa69a 100644
--- a/src/dmap/grl-daap-record-factory.h
+++ b/src/dmap/grl-daap-record-factory.h
@@ -25,32 +25,31 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_SIMPLE_DAAP_RECORD_FACTORY         \
-  (grl_daap_record_factory_get_type ())
-
-#define SIMPLE_DAAP_RECORD_FACTORY(o)                          \
-  (G_TYPE_CHECK_INSTANCE_CAST((o),                             \
-                              TYPE_SIMPLE_DAAP_RECORD_FACTORY, \
-                              GrlDAAPRecordFactory))
-
-#define SIMPLE_DAAP_RECORD_FACTORY_CLASS(k)                 \
-  (G_TYPE_CHECK_CLASS_CAST((k),                             \
-                           TYPE_SIMPLE_DAAP_RECORD_FACTORY, \
-                           GrlDAAPRecordFactoryClass))
-
-#define IS_SIMPLE_DAAP_RECORD_FACTORY(o)                          \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                                \
-                              TYPE_SIMPLE_DAAP_RECORD_FACTORY))
-
-#define IS_SIMPLE_DAAP_RECORD_FACTORY_CLASS(k)                       \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                                      \
-                           TYPE_SIMPLE_DAAP_RECORD_FACTORY_CLASS))
-
-#define SIMPLE_DAAP_RECORD_FACTORY_GET_CLASS(o)                \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                              \
-                             TYPE_SIMPLE_DAAP_RECORD_FACTORY,  \
+#define TYPE_SIMPLE_DAAP_RECORD_FACTORY (grl_daap_record_factory_get_type ())
+
+#define SIMPLE_DAAP_RECORD_FACTORY(o)                                          \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_SIMPLE_DAAP_RECORD_FACTORY,               \
+                                GrlDAAPRecordFactory))
+
+#define SIMPLE_DAAP_RECORD_FACTORY_CLASS(k)                                    \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_SIMPLE_DAAP_RECORD_FACTORY,                  \
                              GrlDAAPRecordFactoryClass))
 
+#define IS_SIMPLE_DAAP_RECORD_FACTORY(o)                                       \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
+                                TYPE_SIMPLE_DAAP_RECORD_FACTORY))
+
+#define IS_SIMPLE_DAAP_RECORD_FACTORY_CLASS(k)                                 \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                             TYPE_SIMPLE_DAAP_RECORD_FACTORY_CLASS))
+
+#define SIMPLE_DAAP_RECORD_FACTORY_GET_CLASS(o)                                \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                               TYPE_SIMPLE_DAAP_RECORD_FACTORY,                \
+                               GrlDAAPRecordFactoryClass))
+
 typedef struct GrlDAAPRecordFactoryPrivate GrlDAAPRecordFactoryPrivate;
 
 typedef struct {
@@ -61,11 +60,11 @@ typedef struct {
   GObjectClass parent;
 } GrlDAAPRecordFactoryClass;
 
-GType                    grl_daap_record_factory_get_type (void);
+GType grl_daap_record_factory_get_type (void);
 
-GrlDAAPRecordFactory *grl_daap_record_factory_new      (void);
+GrlDAAPRecordFactory *grl_daap_record_factory_new (void);
 
-DMAPRecord              *grl_daap_record_factory_create   (DMAPRecordFactory *factory, gpointer user_data);
+DMAPRecord *grl_daap_record_factory_create (DMAPRecordFactory *factory, gpointer user_data);
 
 #endif /* __SIMPLE_DAAP_RECORD_FACTORY */
 
diff --git a/src/dmap/grl-daap-record.c b/src/dmap/grl-daap-record.c
index d1721d2..82bf2f9 100644
--- a/src/dmap/grl-daap-record.c
+++ b/src/dmap/grl-daap-record.c
@@ -69,9 +69,9 @@ enum {
 
 static void
 grl_daap_record_set_property (GObject *object,
-                                 guint prop_id,
-                                 const GValue *value,
-                                 GParamSpec *pspec)
+                              guint prop_id,
+                              const GValue *value,
+                              GParamSpec *pspec)
 {
   GrlDAAPRecord *record = SIMPLE_DAAP_RECORD (object);
 
@@ -86,27 +86,27 @@ grl_daap_record_set_property (GObject *object,
     break;
   case PROP_ALBUM:
     g_free (record->priv->album);
-    record->priv->album = g_value_dup_string(value);
+    record->priv->album = g_value_dup_string (value);
     break;
   case PROP_SORT_ALBUM:
     g_free (record->priv->sort_album);
-    record->priv->sort_album = g_value_dup_string(value);
+    record->priv->sort_album = g_value_dup_string (value);
     break;
   case PROP_ARTIST:
     g_free (record->priv->artist);
-    record->priv->artist = g_value_dup_string(value);
+    record->priv->artist = g_value_dup_string (value);
     break;
   case PROP_SORT_ARTIST:
     g_free (record->priv->sort_artist);
-    record->priv->sort_artist = g_value_dup_string(value);
+    record->priv->sort_artist = g_value_dup_string (value);
     break;
   case PROP_GENRE:
     g_free (record->priv->genre);
-    record->priv->genre = g_value_dup_string(value);
+    record->priv->genre = g_value_dup_string (value);
     break;
   case PROP_FORMAT:
     g_free (record->priv->format);
-    record->priv->format = g_value_dup_string(value);
+    record->priv->format = g_value_dup_string (value);
     break;
   case PROP_MEDIAKIND:
     record->priv->mediakind = g_value_get_enum (value);
@@ -142,18 +142,16 @@ grl_daap_record_set_property (GObject *object,
     record->priv->has_video = g_value_get_boolean (value);
     break;
   default:
-    G_OBJECT_WARN_INVALID_PROPERTY_ID (object,
-                                       prop_id,
-                                       pspec);
+    G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
     break;
   }
 }
 
 static void
 grl_daap_record_get_property (GObject *object,
-                                 guint prop_id,
-                                 GValue *value,
-                                 GParamSpec *pspec)
+                              guint prop_id,
+                              GValue *value,
+                              GParamSpec *pspec)
 {
   GrlDAAPRecord *record = SIMPLE_DAAP_RECORD (object);
 
@@ -216,9 +214,7 @@ grl_daap_record_get_property (GObject *object,
     g_value_set_boolean (value, record->priv->has_video);
     break;
   default:
-    G_OBJECT_WARN_INVALID_PROPERTY_ID (object,
-                                       prop_id,
-                                       pspec);
+    G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
     break;
   }
 }
diff --git a/src/dmap/grl-daap-record.h b/src/dmap/grl-daap-record.h
index 59558c4..7aae82d 100644
--- a/src/dmap/grl-daap-record.h
+++ b/src/dmap/grl-daap-record.h
@@ -25,36 +25,35 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_SIMPLE_DAAP_RECORD                 \
-  (grl_daap_record_get_type ())
-
-#define SIMPLE_DAAP_RECORD(o)                            \
-  (G_TYPE_CHECK_INSTANCE_CAST((o),                       \
-                              TYPE_SIMPLE_DAAP_RECORD,   \
-                              GrlDAAPRecord))
-
-#define SIMPLE_DAAP_RECORD_CLASS(k)                   \
-  (G_TYPE_CHECK_CLASS_CAST((k),                       \
-                           TYPE_SIMPLE_DAAP_RECORD,   \
-                           GrlDAAPRecordClass))
-
-#define IS_SIMPLE_DAAP_RECORD(o)                         \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                       \
-                              TYPE_SIMPLE_DAAP_RECORD))
-
-#define IS_SIMPLE_DAAP_RECORD_CLASS(k)                      \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                             \
-                           TYPE_SIMPLE_DAAP_RECORD_CLASS))
-
-#define SIMPLE_DAAP_RECORD_GET_CLASS(o)               \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                     \
-                             TYPE_SIMPLE_DAAP_RECORD, \
+#define TYPE_SIMPLE_DAAP_RECORD (grl_daap_record_get_type ())
+
+#define SIMPLE_DAAP_RECORD(o)                                                  \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_SIMPLE_DAAP_RECORD,                       \
+                                GrlDAAPRecord))
+
+#define SIMPLE_DAAP_RECORD_CLASS(k)                                            \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_SIMPLE_DAAP_RECORD,                          \
                              GrlDAAPRecordClass))
 
-#define SIMPLE_DAAP_RECORD_GET_PRIVATE(o)                \
-  (G_TYPE_INSTANCE_GET_PRIVATE((o),                      \
-                               TYPE_SIMPLE_DAAP_RECORD,  \
-                               GrlDAAPRecordPrivate))
+#define IS_SIMPLE_DAAP_RECORD(o)                                               \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
+                                TYPE_SIMPLE_DAAP_RECORD))
+
+#define IS_SIMPLE_DAAP_RECORD_CLASS(k)                                         \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                             TYPE_SIMPLE_DAAP_RECORD_CLASS))
+
+#define SIMPLE_DAAP_RECORD_GET_CLASS(o)                                        \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                               TYPE_SIMPLE_DAAP_RECORD,                        \
+                               GrlDAAPRecordClass))
+
+#define SIMPLE_DAAP_RECORD_GET_PRIVATE(o)                                      \
+  (G_TYPE_INSTANCE_GET_PRIVATE ((o),                                           \
+                                 TYPE_SIMPLE_DAAP_RECORD,                      \
+                                 GrlDAAPRecordPrivate))
 
 typedef struct GrlDAAPRecordPrivate GrlDAAPRecordPrivate;
 
@@ -69,9 +68,9 @@ typedef struct {
 
 GType grl_daap_record_get_type (void);
 
-GrlDAAPRecord *grl_daap_record_new    (void);
-GInputStream     *grl_daap_record_read   (DAAPRecord *record, GError **error);
-gint              grl_daap_record_get_id (DAAPRecord *record);
+GrlDAAPRecord *grl_daap_record_new (void);
+GInputStream *grl_daap_record_read (DAAPRecord *record, GError **error);
+gint grl_daap_record_get_id (DAAPRecord *record);
 
 #endif /* __SIMPLE_DAAP_RECORD */
 
diff --git a/src/dmap/grl-daap.c b/src/dmap/grl-daap.c
index 13cc7e3..f3c4115 100644
--- a/src/dmap/grl-daap.c
+++ b/src/dmap/grl-daap.c
@@ -42,7 +42,7 @@
 /* --------- Logging  -------- */
 
 #define GRL_LOG_DOMAIN_DEFAULT daap_log_domain
-GRL_LOG_DOMAIN_STATIC(daap_log_domain);
+GRL_LOG_DOMAIN_STATIC (daap_log_domain);
 
 /* --- Plugin information --- */
 
@@ -111,19 +111,19 @@ grl_daap_plugin_init (GrlRegistry *registry,
   sources     = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_object_unref);
 
   g_signal_connect (G_OBJECT (browser),
-                    "service-added",
+                   "service-added",
                     G_CALLBACK (grl_daap_service_added_cb),
                     (gpointer) plugin);
 
   g_signal_connect (G_OBJECT (browser),
-                    "service-removed",
+                   "service-removed",
                     G_CALLBACK (grl_daap_service_removed_cb),
                     (gpointer) plugin);
 
   if (!dmap_mdns_browser_start (browser, &error)) {
     GRL_DEBUG ("error starting browser. code: %d message: %s",
-               error->code,
-               error->message);
+                error->code,
+                error->message);
     g_error_free (error);
 
     g_hash_table_unref (connections);
@@ -138,12 +138,12 @@ grl_daap_plugin_init (GrlRegistry *registry,
 GRL_PLUGIN_DEFINE (GRL_MAJOR,
                    GRL_MINOR,
                    DAAP_PLUGIN_ID,
-                   "DAAP",
-                   "A plugin for browsing DAAP servers",
-                   "W. Michael Petullo",
+                  "DAAP",
+                  "A plugin for browsing DAAP servers",
+                  "W. Michael Petullo",
                    VERSION,
-                   "LGPL",
-                   "http://www.flyn.org",
+                  "LGPL",
+                  "http://www.flyn.org",
                    grl_daap_plugin_init,
                    NULL,
                    NULL);
@@ -166,10 +166,10 @@ grl_daap_source_new (DMAPMdnsBrowserService *service)
   source_id = g_strdup_printf (SOURCE_ID_TEMPLATE, service->name);
 
   source = g_object_new (GRL_DAAP_SOURCE_TYPE,
-                         "source-id",   source_id,
-                         "source-name", service->name,
-                         "source-desc", source_desc,
-                         "supported-media", GRL_SUPPORTED_MEDIA_AUDIO,
+                        "source-id",   source_id,
+                        "source-name", service->name,
+                        "source-desc", source_desc,
+                        "supported-media", GRL_SUPPORTED_MEDIA_AUDIO,
                          NULL);
 
   source->priv->service = service;
@@ -209,14 +209,14 @@ grl_daap_source_finalize (GObject *object)
 static void
 grl_daap_do_browse (ResultCbAndArgsAndDb *cb_and_db)
 {
-  grl_daap_db_browse(GRL_DAAP_DB(cb_and_db->db),
-                     cb_and_db->cb.container,
-                     cb_and_db->cb.source,
-                     cb_and_db->cb.op_id,
-                     cb_and_db->cb.skip,
-                     cb_and_db->cb.count,
-                     cb_and_db->cb.callback,
-                     cb_and_db->cb.user_data);
+  grl_daap_db_browse (GRL_DAAP_DB(cb_and_db->db),
+                      cb_and_db->cb.container,
+                      cb_and_db->cb.source,
+                      cb_and_db->cb.op_id,
+                      cb_and_db->cb.skip,
+                      cb_and_db->cb.count,
+                      cb_and_db->cb.callback,
+                      cb_and_db->cb.user_data);
 
   g_free (cb_and_db);
 }
@@ -224,13 +224,13 @@ grl_daap_do_browse (ResultCbAndArgsAndDb *cb_and_db)
 static void
 grl_daap_do_search (ResultCbAndArgsAndDb *cb_and_db)
 {
-  grl_daap_db_search(GRL_DAAP_DB(cb_and_db->db),
-                     cb_and_db->cb.source,
-                     cb_and_db->cb.op_id,
-                     (GHRFunc) cb_and_db->cb.predicate,
-                     cb_and_db->cb.predicate_data,
-                     cb_and_db->cb.callback,
-                     cb_and_db->cb.user_data);
+  grl_daap_db_search (GRL_DAAP_DB (cb_and_db->db),
+                      cb_and_db->cb.source,
+                      cb_and_db->cb.op_id,
+                      (GHRFunc) cb_and_db->cb.predicate,
+                      cb_and_db->cb.predicate_data,
+                      cb_and_db->cb.callback,
+                      cb_and_db->cb.user_data);
 
   g_free (cb_and_db);
 }
diff --git a/src/dmap/grl-daap.h b/src/dmap/grl-daap.h
index 4912b05..1119495 100644
--- a/src/dmap/grl-daap.h
+++ b/src/dmap/grl-daap.h
@@ -26,31 +26,30 @@
 
 #include <grilo.h>
 
-#define GRL_DAAP_SOURCE_TYPE                    \
-  (grl_daap_source_get_type ())
-
-#define GRL_DAAP_SOURCE(obj)                          \
-  (G_TYPE_CHECK_INSTANCE_CAST ((obj),                 \
-                               GRL_DAAP_SOURCE_TYPE,  \
-                               GrlDaapSource))
-
-#define GRL_IS_DAAP_SOURCE(obj)                       \
-  (G_TYPE_CHECK_INSTANCE_TYPE ((obj),                 \
-                               GRL_DAAP_SOURCE_TYPE))
-
-#define GRL_DAAP_SOURCE_CLASS(klass)               \
-  (G_TYPE_CHECK_CLASS_CAST((klass),                \
-                           GRL_DAAP_SOURCE_TYPE,   \
-                           GrlDaapSourceClass))
-
-#define GRL_IS_DAAP_SOURCE_CLASS(klass)            \
-  (G_TYPE_CHECK_CLASS_TYPE((klass),                \
-                           GRL_DAAP_SOURCE_TYPE))
-
-#define GRL_DAAP_SOURCE_GET_CLASS(obj)                \
-  (G_TYPE_INSTANCE_GET_CLASS ((obj),                  \
-                              GRL_DAAP_SOURCE_TYPE,   \
-                              GrlDaapSourceClass))
+#define GRL_DAAP_SOURCE_TYPE (grl_daap_source_get_type ())
+
+#define GRL_DAAP_SOURCE(obj)                                                   \
+  (G_TYPE_CHECK_INSTANCE_CAST ((obj),                                          \
+                                GRL_DAAP_SOURCE_TYPE,                          \
+                                GrlDaapSource))
+
+#define GRL_IS_DAAP_SOURCE(obj)                                                \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((obj),                                          \
+                                GRL_DAAP_SOURCE_TYPE))
+
+#define GRL_DAAP_SOURCE_CLASS(klass)                                           \
+  (G_TYPE_CHECK_CLASS_CAST ((klass),                                           \
+                             GRL_DAAP_SOURCE_TYPE,                             \
+                             GrlDaapSourceClass))
+
+#define GRL_IS_DAAP_SOURCE_CLASS(klass)                                        \
+  (G_TYPE_CHECK_CLASS_TYPE ((klass),                                           \
+                             GRL_DAAP_SOURCE_TYPE))
+
+#define GRL_DAAP_SOURCE_GET_CLASS(obj)                                         \
+  (G_TYPE_INSTANCE_GET_CLASS ((obj),                                           \
+                               GRL_DAAP_SOURCE_TYPE,                           \
+                               GrlDaapSourceClass))
 
 typedef struct _GrlDaapSourcePrivate GrlDaapSourcePrivate;
 typedef struct _GrlDaapSource  GrlDaapSource;
diff --git a/src/dmap/grl-dpap-db.c b/src/dmap/grl-dpap-db.c
index 1f2d5ca..02ffd3a 100644
--- a/src/dmap/grl-dpap-db.c
+++ b/src/dmap/grl-dpap-db.c
@@ -80,8 +80,8 @@ grl_dpap_db_lookup_by_id (const DMAPDb *db, guint id)
 
 static void
 grl_dpap_db_foreach (const DMAPDb *db,
-                        GHFunc func,
-                        gpointer data)
+                     GHFunc func,
+                     gpointer data)
 {
   g_warning ("Not implemented");
 }
@@ -103,7 +103,7 @@ set_insert (GHashTable *category, const char *category_name, char *set_name, Grl
   id = g_strdup_printf ("%s-%s", category_name, set_name);
 
   container = grl_media_container_new ();
-  grl_media_set_id    (container, id);
+  grl_media_set_id (container, id);
   grl_media_set_title (container, set_name);
 
   set = g_hash_table_lookup (category, container);
@@ -142,35 +142,24 @@ grl_dpap_db_add (DMAPDb *_db, DMAPRecord *_record)
   GrlMedia   *media;
 
   g_object_get (record,
-               "large-filesize",
-               &largefilesize,
-               "creation-date",
-               &creationdate,
-               "rating",
-               &rating,
-               "filename",
-               &filename,
-               "aspect-ratio",
-               &aspectratio,
-               "pixel-height",
-               &height,
-               "pixel-width",
-               &width,
-               "format",
-               &format,
-               "comments",
-               &comments,
-               "thumbnail",
-               &thumbnail,
-               "location",
-               &url,
+               "large-filesize", &largefilesize,
+               "creation-date", &creationdate,
+               "rating", &rating,
+               "filename", &filename,
+               "aspect-ratio", &aspectratio,
+               "pixel-height", &height,
+               "pixel-width", &width,
+               "format", &format,
+               "comments", &comments,
+               "thumbnail", &thumbnail,
+               "location", &url,
                 NULL);
 
   id_s = g_strdup_printf ("%u", nextid);
 
   media = grl_media_image_new ();
 
-  grl_media_set_id           (media, id_s);
+  grl_media_set_id (media, id_s);
 
   if (filename)
     grl_media_set_title (media, filename);
@@ -181,7 +170,7 @@ grl_dpap_db_add (DMAPDb *_db, DMAPRecord *_record)
     grl_media_set_url (media, url);
   }
 
-  grl_media_set_width  (media, width);
+  grl_media_set_width (media, width);
   grl_media_set_height (media, height);
 
   set_insert (db->priv->photos,  PHOTOS_ID, "Unknown",  media);
@@ -195,7 +184,7 @@ grl_dpap_db_add (DMAPDb *_db, DMAPRecord *_record)
 static gboolean
 same_media (GrlMedia *a, GrlMedia *b)
 {
-  return (strcmp (grl_media_get_id (a), grl_media_get_id (b)) == 0);
+  return strcmp (grl_media_get_id (a), grl_media_get_id (b)) == 0;
 }
 
 void
@@ -230,7 +219,7 @@ grl_dpap_db_browse (GrlDPAPDb *db,
   if (hash_table == NULL) {
     GError *error = g_error_new (GRL_CORE_ERROR,
                                  GRL_CORE_ERROR_BROWSE_FAILED,
-                                 "Invalid container identifier %s",
+                                "Invalid container identifier %s",
                                  container_id);
     func (source, op_id, NULL, 0, user_data, error);
     goto done;
@@ -334,7 +323,7 @@ grl_dpap_db_init (GrlDPAPDb *db)
 
   db->priv->photos_container  = grl_media_container_new ();
 
-  grl_media_set_id    (GRL_MEDIA (db->priv->photos_container), PHOTOS_ID);
+  grl_media_set_id (GRL_MEDIA (db->priv->photos_container), PHOTOS_ID);
   grl_media_set_title (GRL_MEDIA (db->priv->photos_container), PHOTOS_NAME);
 
   db->priv->root   = g_hash_table_new_full (container_hash, container_equal, g_object_unref, (GDestroyNotify) g_hash_table_destroy);
diff --git a/src/dmap/grl-dpap-db.h b/src/dmap/grl-dpap-db.h
index 4c17d1a..d3abcba 100644
--- a/src/dmap/grl-dpap-db.h
+++ b/src/dmap/grl-dpap-db.h
@@ -26,34 +26,33 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_GRL_DPAP_DB                     \
-  (grl_dpap_db_get_type ())
+#define TYPE_GRL_DPAP_DB (grl_dpap_db_get_type ())
 
-#define GRL_DPAP_DB(o)                             \
-  (G_TYPE_CHECK_INSTANCE_CAST ((o),                   \
-                               TYPE_GRL_DPAP_DB,   \
-                               GrlDPAPDb))
+#define GRL_DPAP_DB(o)                                                         \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_GRL_DPAP_DB,                              \
+                                GrlDPAPDb))
 
-#define GRL_DPAP_DB_CLASS(k)                 \
-  (G_TYPE_CHECK_CLASS_CAST((k),                 \
-                           TYPE_GRL_DPAP_DB, \
-                           GrlDPAPDbClass))
-#define IS_GRL_DPAP_DB(o)                          \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                    \
-                              TYPE_GRL_DPAP_DB))
-#define IS_GRL_DPAP_DB_CLASS(k)                       \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                          \
-                           TYPE_GRL_DPAP_DB_CLASS))
-
-#define GRL_DPAP_DB_GET_CLASS(o)                \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                  \
-                             TYPE_GRL_DPAP_DB,  \
+#define GRL_DPAP_DB_CLASS(k)                                                   \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_GRL_DPAP_DB,                                 \
                              GrlDPAPDbClass))
+#define IS_GRL_DPAP_DB(o)                                                      \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
+                                TYPE_GRL_DPAP_DB))
+#define IS_GRL_DPAP_DB_CLASS(k)                                                \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                             TYPE_GRL_DPAP_DB_CLASS))
+
+#define GRL_DPAP_DB_GET_CLASS(o)                                               \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                               TYPE_GRL_DPAP_DB,                               \
+                               GrlDPAPDbClass))
 
-#define GRL_DPAP_DB_GET_PRIVATE(o)                 \
-  (G_TYPE_INSTANCE_GET_PRIVATE((o),                   \
-                               TYPE_GRL_DPAP_DB,   \
-                               GrlDPAPDbPrivate))
+#define GRL_DPAP_DB_GET_PRIVATE(o)                                             \
+  (G_TYPE_INSTANCE_GET_PRIVATE ((o),                                           \
+                                 TYPE_GRL_DPAP_DB,                             \
+                                 GrlDPAPDbPrivate))
 
 typedef struct GrlDPAPDbPrivate GrlDPAPDbPrivate;
 
diff --git a/src/dmap/grl-dpap-record-factory.c b/src/dmap/grl-dpap-record-factory.c
index 8174338..3d0c87a 100644
--- a/src/dmap/grl-dpap-record-factory.c
+++ b/src/dmap/grl-dpap-record-factory.c
@@ -22,9 +22,9 @@
 #include "grl-dpap-record.h"
 
 DMAPRecord *
-grl_dpap_record_factory_create  (DMAPRecordFactory *factory, gpointer user_data)
+grl_dpap_record_factory_create (DMAPRecordFactory *factory, gpointer user_data)
 {
-	return DMAP_RECORD (grl_dpap_record_new ());
+  return DMAP_RECORD (grl_dpap_record_new ());
 }
 
 static void
@@ -40,19 +40,19 @@ grl_dpap_record_factory_class_init (GrlDPAPRecordFactoryClass *klass)
 static void
 grl_dpap_record_factory_interface_init (gpointer iface, gpointer data)
 {
-	DMAPRecordFactoryIface *factory = iface;
+  DMAPRecordFactoryIface *factory = iface;
 
-	g_assert (G_TYPE_FROM_INTERFACE (factory) == DMAP_TYPE_RECORD_FACTORY);
+  g_assert (G_TYPE_FROM_INTERFACE (factory) == DMAP_TYPE_RECORD_FACTORY);
 
-	factory->create = grl_dpap_record_factory_create;
+  factory->create = grl_dpap_record_factory_create;
 }
 
 G_DEFINE_TYPE_WITH_CODE (GrlDPAPRecordFactory, grl_dpap_record_factory, G_TYPE_OBJECT,
-			 G_IMPLEMENT_INTERFACE (DMAP_TYPE_RECORD_FACTORY,
-					        grl_dpap_record_factory_interface_init))
+                         G_IMPLEMENT_INTERFACE (DMAP_TYPE_RECORD_FACTORY,
+                                                grl_dpap_record_factory_interface_init))
 
 GrlDPAPRecordFactory *
 grl_dpap_record_factory_new (void)
 {
-	return SIMPLE_DPAP_RECORD_FACTORY (g_object_new (TYPE_SIMPLE_DPAP_RECORD_FACTORY, NULL));
+  return SIMPLE_DPAP_RECORD_FACTORY (g_object_new (TYPE_SIMPLE_DPAP_RECORD_FACTORY, NULL));
 }
diff --git a/src/dmap/grl-dpap-record-factory.h b/src/dmap/grl-dpap-record-factory.h
index c2106b1..3f4ca54 100644
--- a/src/dmap/grl-dpap-record-factory.h
+++ b/src/dmap/grl-dpap-record-factory.h
@@ -25,30 +25,29 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_SIMPLE_DPAP_RECORD_FACTORY         \
-  (grl_dpap_record_factory_get_type ())
+#define TYPE_SIMPLE_DPAP_RECORD_FACTORY (grl_dpap_record_factory_get_type ())
 
-#define SIMPLE_DPAP_RECORD_FACTORY(o)                          \
-  (G_TYPE_CHECK_INSTANCE_CAST((o),                             \
-                              TYPE_SIMPLE_DPAP_RECORD_FACTORY, \
-                              GrlDPAPRecordFactory))
+#define SIMPLE_DPAP_RECORD_FACTORY(o)                                          \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_SIMPLE_DPAP_RECORD_FACTORY,               \
+                                GrlDPAPRecordFactory))
 
-#define SIMPLE_DPAP_RECORD_FACTORY_CLASS(k)                 \
-  (G_TYPE_CHECK_CLASS_CAST((k),                             \
-                           TYPE_SIMPLE_DPAP_RECORD_FACTORY, \
-                           GrlDPAPRecordFactoryClass))
+#define SIMPLE_DPAP_RECORD_FACTORY_CLASS(k)                                    \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_SIMPLE_DPAP_RECORD_FACTORY,                  \
+                             GrlDPAPRecordFactoryClass))
 
-#define IS_SIMPLE_DPAP_RECORD_FACTORY(o)                          \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                                \
+#define IS_SIMPLE_DPAP_RECORD_FACTORY(o)                                       \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
                               TYPE_SIMPLE_DPAP_RECORD_FACTORY))
 
-#define IS_SIMPLE_DPAP_RECORD_FACTORY_CLASS(k)                       \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                                      \
-                           TYPE_SIMPLE_DPAP_RECORD_FACTORY_CLASS))
+#define IS_SIMPLE_DPAP_RECORD_FACTORY_CLASS(k)                                 \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                             TYPE_SIMPLE_DPAP_RECORD_FACTORY_CLASS))
 
-#define SIMPLE_DPAP_RECORD_FACTORY_GET_CLASS(o)                \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                              \
-                             TYPE_SIMPLE_DPAP_RECORD_FACTORY,  \
+#define SIMPLE_DPAP_RECORD_FACTORY_GET_CLASS(o)                                \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                             TYPE_SIMPLE_DPAP_RECORD_FACTORY,                  \
                              GrlDPAPRecordFactoryClass))
 
 typedef struct GrlDPAPRecordFactoryPrivate GrlDPAPRecordFactoryPrivate;
@@ -61,11 +60,11 @@ typedef struct {
   GObjectClass parent;
 } GrlDPAPRecordFactoryClass;
 
-GType                    grl_dpap_record_factory_get_type (void);
+GType grl_dpap_record_factory_get_type (void);
 
-GrlDPAPRecordFactory *grl_dpap_record_factory_new      (void);
+GrlDPAPRecordFactory *grl_dpap_record_factory_new (void);
 
-DMAPRecord              *grl_dpap_record_factory_create   (DMAPRecordFactory *factory, gpointer user_data);
+DMAPRecord *grl_dpap_record_factory_create (DMAPRecordFactory *factory, gpointer user_data);
 
 #endif /* __SIMPLE_DPAP_RECORD_FACTORY */
 
diff --git a/src/dmap/grl-dpap-record.c b/src/dmap/grl-dpap-record.c
index 6281417..14eb1de 100644
--- a/src/dmap/grl-dpap-record.c
+++ b/src/dmap/grl-dpap-record.c
@@ -61,9 +61,9 @@ G_DEFINE_TYPE_WITH_CODE (GrlDPAPRecord, grl_dpap_record, G_TYPE_OBJECT,
 
 static void
 grl_dpap_record_set_property (GObject *object,
-                                guint prop_id,
-                                const GValue *value,
-                                GParamSpec *pspec)
+                              guint prop_id,
+                              const GValue *value,
+                              GParamSpec *pspec)
 {
   GrlDPAPRecord *record = SIMPLE_DPAP_RECORD (object);
 
@@ -116,9 +116,9 @@ grl_dpap_record_set_property (GObject *object,
 
 static void
 grl_dpap_record_get_property (GObject *object,
-                                 guint prop_id,
-                                 GValue *value,
-                                 GParamSpec *pspec)
+                              guint prop_id,
+                              GValue *value,
+                              GParamSpec *pspec)
 {
   GrlDPAPRecord *record = SIMPLE_DPAP_RECORD (object);
 
diff --git a/src/dmap/grl-dpap-record.h b/src/dmap/grl-dpap-record.h
index 4441740..203e57e 100644
--- a/src/dmap/grl-dpap-record.h
+++ b/src/dmap/grl-dpap-record.h
@@ -25,36 +25,35 @@
 
 G_BEGIN_DECLS
 
-#define TYPE_SIMPLE_DPAP_RECORD                 \
-  (grl_dpap_record_get_type ())
-
-#define SIMPLE_DPAP_RECORD(o)                            \
-  (G_TYPE_CHECK_INSTANCE_CAST((o),                       \
-                              TYPE_SIMPLE_DPAP_RECORD,   \
-                              GrlDPAPRecord))
-
-#define SIMPLE_DPAP_RECORD_CLASS(k)                   \
-  (G_TYPE_CHECK_CLASS_CAST((k),                       \
-                           TYPE_SIMPLE_DPAP_RECORD,   \
-                           GrlDPAPRecordClass))
-
-#define IS_SIMPLE_DPAP_RECORD(o)                         \
-  (G_TYPE_CHECK_INSTANCE_TYPE((o),                       \
-                              TYPE_SIMPLE_DPAP_RECORD))
-
-#define IS_SIMPLE_DPAP_RECORD_CLASS(k)                      \
-  (G_TYPE_CHECK_CLASS_TYPE((k),                             \
-                           TYPE_SIMPLE_DPAP_RECORD_CLASS))
-
-#define SIMPLE_DPAP_RECORD_GET_CLASS(o)               \
-  (G_TYPE_INSTANCE_GET_CLASS((o),                     \
-                             TYPE_SIMPLE_DPAP_RECORD, \
+#define TYPE_SIMPLE_DPAP_RECORD (grl_dpap_record_get_type ())
+
+#define SIMPLE_DPAP_RECORD(o)                                                  \
+  (G_TYPE_CHECK_INSTANCE_CAST ((o),                                            \
+                                TYPE_SIMPLE_DPAP_RECORD,                       \
+                                GrlDPAPRecord))
+
+#define SIMPLE_DPAP_RECORD_CLASS(k)                                            \
+  (G_TYPE_CHECK_CLASS_CAST ((k),                                               \
+                             TYPE_SIMPLE_DPAP_RECORD,                          \
                              GrlDPAPRecordClass))
 
-#define SIMPLE_DPAP_RECORD_GET_PRIVATE(o)                \
-  (G_TYPE_INSTANCE_GET_PRIVATE((o),                      \
-                               TYPE_SIMPLE_DPAP_RECORD,  \
-                               GrlDPAPRecordPrivate))
+#define IS_SIMPLE_DPAP_RECORD(o)                                               \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((o),                                            \
+                                TYPE_SIMPLE_DPAP_RECORD))
+
+#define IS_SIMPLE_DPAP_RECORD_CLASS(k)                                         \
+  (G_TYPE_CHECK_CLASS_TYPE ((k),                                               \
+                            TYPE_SIMPLE_DPAP_RECORD_CLASS))
+
+#define SIMPLE_DPAP_RECORD_GET_CLASS(o)                                        \
+  (G_TYPE_INSTANCE_GET_CLASS ((o),                                             \
+                              TYPE_SIMPLE_DPAP_RECORD,                         \
+                              GrlDPAPRecordClass))
+
+#define SIMPLE_DPAP_RECORD_GET_PRIVATE(o)                                      \
+  (G_TYPE_INSTANCE_GET_PRIVATE ((o),                                           \
+                                TYPE_SIMPLE_DPAP_RECORD,                       \
+                                GrlDPAPRecordPrivate))
 
 typedef struct GrlDPAPRecordPrivate GrlDPAPRecordPrivate;
 
@@ -69,9 +68,9 @@ typedef struct {
 
 GType grl_dpap_record_get_type (void);
 
-GrlDPAPRecord    *grl_dpap_record_new    (void);
-GInputStream     *grl_dpap_record_read   (DPAPRecord *record, GError **error);
-gint              grl_dpap_record_get_id (DPAPRecord *record);
+GrlDPAPRecord *grl_dpap_record_new (void);
+GInputStream *grl_dpap_record_read (DPAPRecord *record, GError **error);
+gint grl_dpap_record_get_id (DPAPRecord *record);
 
 #endif /* __SIMPLE_DPAP_RECORD */
 
diff --git a/src/dmap/grl-dpap.c b/src/dmap/grl-dpap.c
index 744de80..9829ec2 100644
--- a/src/dmap/grl-dpap.c
+++ b/src/dmap/grl-dpap.c
@@ -42,7 +42,7 @@
 /* --------- Logging  -------- */
 
 #define GRL_LOG_DOMAIN_DEFAULT dmap_log_domain
-GRL_LOG_DOMAIN_STATIC(dmap_log_domain);
+GRL_LOG_DOMAIN_STATIC (dmap_log_domain);
 
 /* --- Plugin information --- */
 
@@ -51,10 +51,10 @@ GRL_LOG_DOMAIN_STATIC(dmap_log_domain);
 
 /* --- Grilo DPAP Private --- */
 
-#define GRL_DPAP_SOURCE_GET_PRIVATE(object)           \
-  (G_TYPE_INSTANCE_GET_PRIVATE((object),              \
-                               GRL_DPAP_SOURCE_TYPE,  \
-                               GrlDpapSourcePrivate))
+#define GRL_DPAP_SOURCE_GET_PRIVATE(object)            \
+  (G_TYPE_INSTANCE_GET_PRIVATE ((object),              \
+                                 GRL_DPAP_SOURCE_TYPE, \
+                                 GrlDpapSourcePrivate))
 
 struct _GrlDpapSourcePrivate {
   DMAPMdnsBrowserService *service;
@@ -116,19 +116,19 @@ grl_dpap_plugin_init (GrlRegistry *registry,
   sources     = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_object_unref);
 
   g_signal_connect (G_OBJECT (browser),
-                    "service-added",
+                   "service-added",
                     G_CALLBACK (grl_dpap_service_added_cb),
                     (gpointer) plugin);
 
   g_signal_connect (G_OBJECT (browser),
-                    "service-removed",
+                   "service-removed",
                     G_CALLBACK (grl_dpap_service_removed_cb),
                     (gpointer) plugin);
 
   if (!dmap_mdns_browser_start (browser, &error)) {
     GRL_DEBUG ("error starting browser. code: %d message: %s",
-               error->code,
-               error->message);
+                error->code,
+                error->message);
     g_error_free (error);
 
     g_hash_table_unref (connections);
@@ -143,12 +143,12 @@ grl_dpap_plugin_init (GrlRegistry *registry,
 GRL_PLUGIN_DEFINE (GRL_MAJOR,
                    GRL_MINOR,
                    DPAP_PLUGIN_ID,
-                   "DPAP",
-                   "A plugin for browsing DPAP servers",
-                   "W. Michael Petullo",
+                  "DPAP",
+                  "A plugin for browsing DPAP servers",
+                  "W. Michael Petullo",
                    VERSION,
-                   "LGPL",
-                   "http://www.flyn.org",
+                  "LGPL",
+                  "http://www.flyn.org",
                    grl_dpap_plugin_init,
                    NULL,
                    NULL);
@@ -171,10 +171,10 @@ grl_dpap_source_new (DMAPMdnsBrowserService *service)
   source_id = g_strdup_printf (SOURCE_ID_TEMPLATE, service->name);
 
   source = g_object_new (GRL_DPAP_SOURCE_TYPE,
-                         "source-id",   source_id,
-                         "source-name", service->name,
-                         "source-desc", source_desc,
-                         "supported-media", GRL_SUPPORTED_MEDIA_IMAGE,
+                        "source-id",   source_id,
+                        "source-name", service->name,
+                        "source-desc", source_desc,
+                        "supported-media", GRL_SUPPORTED_MEDIA_IMAGE,
                          NULL);
 
   source->priv->service = service;
@@ -214,14 +214,14 @@ grl_dpap_source_finalize (GObject *object)
 static void
 grl_dpap_do_browse (ResultCbAndArgsAndDb *cb_and_db)
 {
-  grl_dpap_db_browse(GRL_DPAP_DB(cb_and_db->db),
-                     cb_and_db->cb.container,
-                     cb_and_db->cb.source,
-                     cb_and_db->cb.op_id,
-                     cb_and_db->cb.skip,
-                     cb_and_db->cb.count,
-                     cb_and_db->cb.callback,
-                     cb_and_db->cb.user_data);
+  grl_dpap_db_browse (GRL_DPAP_DB (cb_and_db->db),
+                      cb_and_db->cb.container,
+                      cb_and_db->cb.source,
+                      cb_and_db->cb.op_id,
+                      cb_and_db->cb.skip,
+                      cb_and_db->cb.count,
+                      cb_and_db->cb.callback,
+                      cb_and_db->cb.user_data);
 
   g_free (cb_and_db);
 }
@@ -229,13 +229,13 @@ grl_dpap_do_browse (ResultCbAndArgsAndDb *cb_and_db)
 static void
 grl_dpap_do_search (ResultCbAndArgsAndDb *cb_and_db)
 {
-  grl_dpap_db_search(GRL_DPAP_DB(cb_and_db->db),
-                     cb_and_db->cb.source,
-                     cb_and_db->cb.op_id,
-                     (GHRFunc) cb_and_db->cb.predicate,
-                     cb_and_db->cb.predicate_data,
-                     cb_and_db->cb.callback,
-                     cb_and_db->cb.user_data);
+  grl_dpap_db_search (GRL_DPAP_DB (cb_and_db->db),
+                      cb_and_db->cb.source,
+                      cb_and_db->cb.op_id,
+                      (GHRFunc) cb_and_db->cb.predicate,
+                      cb_and_db->cb.predicate_data,
+                      cb_and_db->cb.callback,
+                      cb_and_db->cb.user_data);
 
   g_free (cb_and_db);
 }
diff --git a/src/dmap/grl-dpap.h b/src/dmap/grl-dpap.h
index 1f36cfc..ee596b5 100644
--- a/src/dmap/grl-dpap.h
+++ b/src/dmap/grl-dpap.h
@@ -26,31 +26,30 @@
 
 #include <grilo.h>
 
-#define GRL_DPAP_SOURCE_TYPE                    \
-  (grl_dpap_source_get_type ())
+#define GRL_DPAP_SOURCE_TYPE (grl_dpap_source_get_type ())
 
-#define GRL_DPAP_SOURCE(obj)                          \
-  (G_TYPE_CHECK_INSTANCE_CAST ((obj),                 \
-                               GRL_DPAP_SOURCE_TYPE,  \
-                               GrlDpapSource))
+#define GRL_DPAP_SOURCE(obj)                                                   \
+  (G_TYPE_CHECK_INSTANCE_CAST ((obj),                                          \
+                                GRL_DPAP_SOURCE_TYPE,                          \
+                                GrlDpapSource))
 
-#define GRL_IS_DPAP_SOURCE(obj)                       \
-  (G_TYPE_CHECK_INSTANCE_TYPE ((obj),                 \
-                               GRL_DPAP_SOURCE_TYPE))
+#define GRL_IS_DPAP_SOURCE(obj)                                                \
+  (G_TYPE_CHECK_INSTANCE_TYPE ((obj),                                          \
+                                GRL_DPAP_SOURCE_TYPE))
 
-#define GRL_DPAP_SOURCE_CLASS(klass)               \
-  (G_TYPE_CHECK_CLASS_CAST((klass),                \
-                           GRL_DPAP_SOURCE_TYPE,   \
-                           GrlDpapSourceClass))
+#define GRL_DPAP_SOURCE_CLASS(klass)                                           \
+  (G_TYPE_CHECK_CLASS_CAST ((klass),                                           \
+                             GRL_DPAP_SOURCE_TYPE,                             \
+                             GrlDpapSourceClass))
 
-#define GRL_IS_DPAP_SOURCE_CLASS(klass)            \
-  (G_TYPE_CHECK_CLASS_TYPE((klass),                \
-                           GRL_DPAP_SOURCE_TYPE))
+#define GRL_IS_DPAP_SOURCE_CLASS(klass)                                        \
+  (G_TYPE_CHECK_CLASS_TYPE ((klass),                                           \
+                             GRL_DPAP_SOURCE_TYPE))
 
-#define GRL_DPAP_SOURCE_GET_CLASS(obj)                \
-  (G_TYPE_INSTANCE_GET_CLASS ((obj),                  \
-                              GRL_DPAP_SOURCE_TYPE,   \
-                              GrlDpapSourceClass))
+#define GRL_DPAP_SOURCE_GET_CLASS(obj)                                         \
+  (G_TYPE_INSTANCE_GET_CLASS ((obj),                                           \
+                               GRL_DPAP_SOURCE_TYPE,                           \
+                               GrlDpapSourceClass))
 
 typedef struct _GrlDpapSourcePrivate GrlDpapSourcePrivate;
 typedef struct _GrlDpapSource  GrlDpapSource;
